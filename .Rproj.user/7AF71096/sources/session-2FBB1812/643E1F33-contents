---
title: "Baltimore City COVID-19 Dashboard"
output:
  flexdashboard::flex_dashboard:
    logo: icon.png
    theme: 
      fg: "#101010"
      bg: "#FDF7F7" 
      primary: "#E36039"
      base_font: !expr bslib::font_google("Source Sans Pro")
      code_font: !expr bslib::font_google("Source Code Pro")
    orientation: columns
    source_code: embed
    vertical_layout: fill
    font: Arial
runtime: shiny
---

```{r libaries}
# Shiny
library(flexdashboard)
library(shiny)
library(leaflet)

# Data wrangling
library(tidyverse)

# Others
library(knitr)
library(kableExtra)
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.fullwidth = TRUE,
  fig.width = 8,
  fig.height = 5
)
```

About {data-icon="glyphicon-info-sign"}
===================================== 

### 

<br>

**What is the purpose of this dashboard?** This dashboard aims to illustrate some key COVID-19 metrics for Baltimore City.

**The data**

This dashboard illustrates some key COVID-19 metrics for Baltimore City, using the data from [COVID ACT NOW](https://apidocs.covidactnow.org/) as of December 16, 2022.

According to their website:

**"Act Now Coalition is an independent 501(c)(3) nonprofit founded by volunteers in March 2020. Covid Act Now is our COVID-focused initiative to help people make informed decisions by providing timely and accurate data about COVID in the U.S."**

The information contained in this dashboard are as follows:

```{r data_dict, echo = FALSE}
data_dict <- read_delim("data_dict.csv", delim=";")
kable(data_dict, format = "html",
      col.names = c("Variable", "Label", "Description")) |>
  kable_styling(bootstrap_options = c("striped", "hover"))
```


**Acknowledgments**

This dashboard was made in huge help using the Johns Hopkins Biostatistics Department tutorial [here](https://rsconnect.biostat.jhsph.edu/ocs-bp-school-shootings-dashboard).


Data {data-icon="glyphicon-hdd"}
===================================== 

Column {data-width=50}
-------------------------------------

```{r datatable1, echo = FALSE}
DT::renderDataTable({
  DT::datatable(shiny_data,
                caption = htmltools::tags$caption(
                  style = 'caption-side: top; text-align: Left;',
                  htmltools::withTags(
                    div(HTML('<a href="https://covidactnow.org/data-api">Click here for instructions to download the data.</a>')))),
                options = list(autoWidth = TRUE,
                               pageLength = 20,
                               scroller = TRUE,
                               scrollY = '600px'))
})
```

Column {data-width=50}
-------------------------------------

Learn more about the underlying data from the COVID ACT NOW [FAQ Page](https://covidactnow.org/data-api#faq)

**Preparing the data**

The following lines retrieve the data, process it, and save in a data subfolder.

```{r data, message = FALSE, results = "hide", echo = TRUE}
library(jsonlite)
library(httr)

# API Key is stored in .Renviron
apikey <- Sys.getenv("COVID_ACT_NOW_API_KEY")

# Retrieve Baltimore City COVID data
balt_data_json <- GET(paste0("https://api.covidactnow.org/v2/county/24510.timeseries.json?apiKey=", apikey))
balt_data <- fromJSON(content(balt_data_json, as = "text"))

# Retrieve relevant variables
shiny_data <-
  data.frame(date = as.Date(balt_data$metricsTimeseries$date),
             cases = balt_data$actualsTimeseries$cases,
             caseDensity = balt_data$metricsTimeseries$caseDensity,
             testPositivityRatio = balt_data$metricsTimeseries$testPositivityRatio,
             weeklyCovidAdmissionsPer100k = balt_data$metricsTimeseries$weeklyCovidAdmissionsPer100k,
             vaccinationsCompletedRatio = balt_data$metricsTimeseries$vaccinationsCompletedRatio,
             deaths = balt_data$actualsTimeseries$deaths)

# Test if a directory named data exists locally (will create if it doesn't exist)
ifelse(!dir.exists("data"), dir.create("data"),
       "Directory is already created")

# Read the data only once
shiny_data_path <- "data/shiny_data.Rdata"

if (!file.exists(shiny_data_path)) {
  save(shiny_data, file = shiny_data_path)
} else {
  load(shiny_data_path)
}
```


At a Glance {data-icon="glyphicon-eye-open"}
===================================== 

```{r dateselect}
# Create minimum and maximum dates
mindate <- shiny_data |> pull(date) |> min()
maxdate <- shiny_data |> pull(date) |> max()

sliderInput(inputId = "dateselect",
            label = "Please select a date:",
            min = mindate,
            max = maxdate,
            value = maxdate,
            width = 1500)
```

Row {data-height = 50}
------------------------------------- 

### **Total Cases to Date**

```{r totalcases}
renderValueBox({
  totalcases <- shiny_data |> 
    dplyr::filter(!is.na(cases)) |>
    dplyr::arrange(desc(date)) |> 
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(cases) |> 
    as.numeric() |> formatC(format = "d", big.mark = ",")
  
  valueBox(value = totalcases, 
           color = "white")
})
```

### **7-day average of number of cases per 100k population**

```{r casedensity}
renderValueBox({
  casedensity <- shiny_data |> 
    dplyr::filter(!is.na(caseDensity)) |>
    dplyr::arrange(desc(date)) |> 
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(caseDensity) |> 
    as.numeric()
  
  valueBox(value = casedensity, 
           color = "white")
})
```

Row {data-height = 50}
------------------------------------- 

### **7-day average proportion of people who test positive**

```{r testpos}
renderValueBox({
  testpos <- shiny_data |> 
    dplyr::filter(!is.na(testPositivityRatio)) |>
    dplyr::arrange(desc(date)) |>
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(testPositivityRatio) |> 
    as.numeric()
  
  valueBox(value = testpos, 
           color = "white")
})
```

### **Number of COVID patients per 100,000 population admitted in the past week**

```{r weeklyhosp}
renderValueBox({
  weeklyhosp <- shiny_data |> 
    dplyr::filter(!is.na(weeklyCovidAdmissionsPer100k)) |>
    dplyr::arrange(desc(date)) |>
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(weeklyCovidAdmissionsPer100k) |> 
    as.numeric()
  
  valueBox(value = weeklyhosp, 
           color = "white")
})
```

Row {data-height = 50}
------------------------------------- 

### **Proportion of completed vaccinations**

```{r vaccine}
renderValueBox({
  vaccine <- shiny_data |> 
    dplyr::filter(!is.na(vaccinationsCompletedRatio)) |>
    dplyr::arrange(desc(date)) |>
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(vaccinationsCompletedRatio) |> 
    as.numeric()
  
  valueBox(value = vaccine, 
           color = "white")
})
```

### **Cumulative COVID-19 deaths**

```{r deaths}
renderValueBox({
  deaths <- shiny_data |> 
    dplyr::filter(!is.na(deaths)) |>
    dplyr::arrange(desc(date)) |>
    dplyr::filter(date <= input$dateselect) |>
    dplyr::filter(dplyr::row_number() == 1L) |>
    dplyr::select(deaths) |> 
    as.numeric() |> formatC(format = "d", big.mark = ",")
  
  valueBox(value = deaths, 
           color = "white") 
})
```


2022 Year to Date Stats {data-icon="glyphicon-expand"}
===================================== 

Row {data-height = 50}
------------------------------------- 

### **Total Cases to Date**

```{r totalcases2022}
shiny_data |> 
  dplyr::filter(!is.na(cases) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, cases) |>
  ggplot(aes(x = date, y = cases)) +
  geom_line(size = 1, color = "#E36039") +
  scale_y_continuous(breaks = seq(0, 150000, 50000), limits = c(0, 150000),
                     labels = function(x) formatC(x, format = "d", big.mark = ",")) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```

### **7-day average of number of cases per 100k population**

```{r casedensity2022}
shiny_data |> 
  dplyr::filter(!is.na(caseDensity) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, caseDensity) |>
  ggplot(aes(x = date, y = caseDensity)) +
  geom_line(size = 1, color = "#E36039") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```

Row {data-height = 50}
------------------------------------- 

### **7-day average proportion of people who test positive**

```{r testpos2022}
shiny_data |> 
  dplyr::filter(!is.na(testPositivityRatio) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, testPositivityRatio) |>
  ggplot(aes(x = date, y = testPositivityRatio)) +
  geom_line(size = 1, color = "#E36039") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```

### **Number of COVID patients per 100,000 population admitted in the past week**

```{r weeklyhosp2022}
shiny_data |> 
  dplyr::filter(!is.na(weeklyCovidAdmissionsPer100k) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, weeklyCovidAdmissionsPer100k) |>
  ggplot(aes(x = date, y = weeklyCovidAdmissionsPer100k)) +
  geom_line(size = 1, color = "#E36039") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```

Row {data-height = 50}
------------------------------------- 

### **Proportion of completed vaccinations**

```{r vaccine2022}
shiny_data |> 
  dplyr::filter(!is.na(vaccinationsCompletedRatio) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, vaccinationsCompletedRatio) |>
  ggplot(aes(x = date, y = vaccinationsCompletedRatio)) +
  geom_line(size = 1, color = "#E36039") +
  scale_y_continuous(breaks = seq(0, 0.75, 0.25), limits = c(0, 0.75)) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```

### **Cumulative COVID-19 deaths**

```{r deaths2022}
shiny_data |> 
  dplyr::filter(!is.na(deaths) & date >= as.Date("2022-01-01")) |>
  dplyr::select(date, deaths) |>
  ggplot(aes(x = date, y = deaths)) +
  geom_line(size = 1, color = "#E36039") +
  scale_y_continuous(breaks = seq(0, 2000, 500), limits = c(0, 2000),
                     labels = function(x) formatC(x, format = "d", big.mark = ",")) +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 12),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
        plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
        legend.title = element_blank())
```


Key Insights {data-icon="glyphicon-flash"}
===================================== 

Column {data-width=700 .tabset .tabset-fade}
-------------------------------------

### Cases vs Hospitalizations

```{r casehosp}
shiny_data |>
  dplyr::filter(!is.na(caseDensity) & !is.na(weeklyCovidAdmissionsPer100k)) |>
    dplyr::select(date, caseDensity, weeklyCovidAdmissionsPer100k) |>
    ggplot(aes(x = date)) +
    geom_line(aes(y = caseDensity, color = "Case Density"), size = 1) +
    geom_line(aes(y = weeklyCovidAdmissionsPer100k, color = "Weekly Admissions"), size = 1) +
    geom_vline(aes(xintercept = as.Date("2021-12-15")), linetype = "dashed", size = 1) +
    geom_text(aes(x = as.Date("2021-09-30"), y = 200, label = "Omicron wave")) +
    labs(title = "In Baltimore, hospitalizations and cases were coupled closely together until the Omicron wave.\nSince then, hospitalizations were lower than cases.") +
    scale_color_manual(values = c("#E36039", "#008080")) +
    theme(panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text = element_text(size = 12),
          axis.title = element_blank(),
          axis.line = element_line(linewidth = 0.5),
          plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
          plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
          legend.title = element_blank(),
          legend.position = c(0.9, 0.9))
```

### Deaths and vaccinations

```{r deathsvax}
shiny_data |>
  dplyr::filter(!is.na(deaths) & !is.na(vaccinationsCompletedRatio)) |>
    dplyr::select(date, deaths, vaccinationsCompletedRatio) |>
    ggplot(aes(x = date)) +
    geom_line(aes(y = deaths, color = "Deaths"), size = 1) +
    geom_line(aes(y = vaccinationsCompletedRatio * 3000, color = "Vaccinations Completed Ratio"), size = 1) +
    scale_y_continuous(name = "Deaths", sec.axis = sec_axis(~./3000, name = "Vaccinations Completed Ratio")) +
    scale_color_manual(values = c("#E36039", "#008080")) +
    labs(x = "", title = "In Baltimore, cumulative deaths from COVID-19 seem to have\nslowed down as vaccination rates started to pick up.") +
    theme(panel.background = element_blank(),
          axis.ticks = element_blank(),
          axis.text = element_text(size = 12),
          axis.title.y.left = element_text(size = 14, face = "bold", color = "#E36039"),
          axis.title.y.right = element_text(size = 14, face = "bold", color = "#008080"),
          axis.line = element_line(linewidth = 0.5),
          plot.title = element_text(size = 12, face = "bold", hjust = 0.5),
          plot.subtitle = element_text(size = 14, face = "bold", hjust = 0.5),
          legend.title = element_blank(),
          legend.position = "none")
```


Interactive Tool {data-icon="glyphicon-stats"}
===================================== 

Column {.sidebar data-width=350}
-----------------------------------------------------------------------

**You may choose the time period and the indicator in which you want to view**

```{r timeperiod}
# Create minimum and maximum dates
mindate <- shiny_data |> pull(date) |> min()
maxdate <- shiny_data |> pull(date) |> max()

sliderInput(inputId = "timeperiod_select",
            label = "Please select a time:",
            min = mindate,
            max = maxdate,
            value = c(mindate, maxdate))
```

**You may also choose the COVID-19 indicator**

```{r covidind}
# Create list of named elements for choices
varname_label <- data_dict |> pull(varname) |> unique() |> as.list()
names(varname_label) <- unique(data_dict$label)

selectInput(inputId = "covidind",
            label = "Please select a COVID-19 indicator",
            choices = varname_label, selected = "cases")
```

Definition:

```{r defn}
renderText({
  defn <- as.character(data_dict[data_dict$varname == as.character(input$covidind), "definition"]) 
  defn
})
```

<br>

Note that the Maryland State government experienced a cyberattack in early December 2021 that did not allow them to report any COVID-19 information. For more information, refer to this [news article](https://www.washingtonpost.com/dc-md-va/2021/12/17/maryland-health-department-remains-quiet-over-when-covid-19-data-will-resume/) from the Washington Post.


Column
-----------------------------------------------------------------------

```{r renderPlot_interact}
renderPlot({
  # Select column of COVID-19 indicator of interest and filter by the dates
  shiny_data_select <- shiny_data |> dplyr::select(date, input$covidind) |>
    dplyr::filter(date >= input$timeperiod_select[1] & date <= input$timeperiod_select[2])
  colnames(shiny_data_select) <- c("date", "covidind")
  shiny_data_select <- shiny_data_select |> dplyr::filter(!is.na(covidind))
  
  # Definition
  defn <- as.character(data_dict[data_dict$varname == as.character(input$covidind), "definition"]) 
  
  shiny_data_select |>
    ggplot(aes(x = date, y = covidind)) +
    geom_line(size = 2, color = "#E36039") +
    labs(title = defn) +
    theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        axis.text = element_text(size = 24),
        axis.title = element_blank(),
        axis.line = element_line(linewidth = 0.5),
        plot.title = element_text(size = 28, face = "bold", hjust = 0.5),
        legend.title = element_blank())
}, width = 1500, height = 800)
```


Analysis {.storyboard data-icon="glyphicon-blackboard"}
===================================== 


### Research Question

We aim to answer the question: **How does Baltimore City test positivity trends compare to Maryland (MD) and the United States (US) overall?** This is a descriptive study that describes general trends in seven-day test positivity ratio (`pos7dave`) across Baltimore City, MD, and the US (`levels`) across days (`days`) from March 2020 until the latest available data from our data source, COVID ACT NOW.

```{r read_data, echo = TRUE}
balt_testpos_path <- "data/balt_testpos.Rdata"
load(balt_testpos_path)
```

### Code for test positivity time trends in Baltimore City, Maryland, and the United States

We now examine the test positivity time trends by year across Baltimore City, MD, and the US.

```{r timetrend, echo = TRUE}
#| fig.width = 10

library(lubridate)

testpositivityplot <-
ggplot(balt_testpos, aes(x = monthday, y = pos7dave, group = year, color = factor(year))) +
  geom_line(size = 1) +
  facet_wrap(~level) +
  scale_x_datetime(breaks = make_datetime(2020,1:12), labels = month.abb) +
  labs(y = "Test positivity ratio (7-day moving average)", x = "",
       title = "The general time trend of test positivity in Baltimore is similar to Maryland and the United States overall",
       subtitle = "Baltimore experienced the Delta and Omicron waves around the same time as the state and country",
       caption = "Data retrieved from COVID ACT NOW") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        legend.title = element_blank(),
        legend.position = c(0.9, 0.8))
```


### Plot for test positivity time trends in Baltimore City, Maryland, and the United States

```{r plot1}
testpositivityplot
```

### Code for scatterplot of Baltimore test positivity ratio

We see that generally, trends in Baltimore follow what is happening in MD and the US overall. This is further confirmed by looking at a scatterplot of Baltimore test positivity ratio vs MD's and vs. the US's. We also fit a loess smoothed curve to show that generally, the relationship in the test positivity rates is monotonically increasing.

```{r scatter, echo = TRUE}
#| fig.width = 8

# Convert data to wide
balt_testpos_wide <- balt_testpos |>
  pivot_wider(id_cols = "date", names_from = "level", values_from = "pos7dave") |>
  mutate(diff_md = Baltimore - MD,
         diff_us = Baltimore - US)

scatterplot1 <-
ggplot(balt_testpos_wide) +
  geom_point(aes(x = Baltimore, y = MD, color = "vs. MD"), size = 0.5) +
  geom_smooth(aes(x = Baltimore, y = MD, color = "vs. MD"), method = "loess") +
  geom_point(aes(x = Baltimore, y = US, color = "vs. US"), size = 0.5) +
  geom_smooth(aes(x = Baltimore, y = US, color = "vs. US"), method = "loess") +
  labs(y = "Test positivity with comparison area", x = "Test positivity in Baltimore City",
       title = "Generally, trends in test positivity in Baltimore follow trends in MD and US overall",
       subtitle = "However, a few Baltimore City rates do not peak as much as the rest of MD and US overall",
       caption = "Data retrieved from COVID ACT NOW") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        legend.title = element_blank(),
        legend.position = c(0.8, 0.2))
```


### Plot for scatterplot of Baltimore test positivity ratio

```{r plot2}
scatterplot1
```

### Code for differences in Test Positivity Ratio between Baltimore City and MD and the US

However, we see that there are days where the Baltimore City rates do not peak as much as the rest of MD and the US overall.

We then further investigate these differences in test positivity by calculating the difference between Baltimore's and MD's and the US's for each day. We plot the differences as follows:

```{r bardiff, echo = TRUE}
#| fig.width = 8

diffplot <-
ggplot(balt_testpos_wide, aes(x = date)) +
  geom_bar(aes(y = diff_md, fill = "Difference from MD"), alpha = 0.7, stat = "identity") +
  geom_bar(aes(y = diff_us, fill = "Difference from US"), alpha = 0.2, stat = "identity") +
  labs(y = "Difference in test positivity ratio (7-day moving average)", x = "",
       title = "In 2021 and 2022, Baltimore positivity ratios were generally lower than MD and US overall",
       subtitle = "In late 2020, Baltimore positivity ratios were higher than MD and US overall",
       caption = "Data retrieved from COVID ACT NOW") +
  theme(panel.background = element_blank(),
        axis.ticks = element_blank(),
        legend.title = element_blank(),
        legend.position = c(0.2, 0.2))
```

We then see that on most days, Baltimore City test positivity rates are lower than MD's and the US's.

### Plot for differences in Test Positivity Ratio between Baltimore City and MD and the US

```{r plot3}
diffplot
```

### Summary

Using COVID test positviity data from COVID ACT NOW, we find that Baltimore city test positivity ratio follows time trends similar to what is seen in MD and the US overall. However, on most days, Baltimore test positivity ratio is lower than MD's and the US's.

**Functions Used**

* Three API calls: US time series data, MD time series data, Baltimore time series data
* `dplyr`: `arrange`, `group_by`, `mutate`, `pivot_wider`, `ungroup`
* `lubridate`: `make_datetime`
* `purrr`: `map` and `map_dfr`
* `ggplot2` geoms: `geom_line`, `geom_bar`, `geom_point`, `geom_smooth`
* `zoo`: `rollmeanr`


Tutorial {data-icon="glyphicon-film"}
===================================== 

<iframe width="850" height="480" src="https://www.youtube.com/embed/bR1N1_SNmtQ" frameborder="0" allowfullscreen></iframe>
